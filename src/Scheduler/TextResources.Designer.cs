//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NerdyDuck.Scheduler {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NerdyDuck.Scheduler.TextResources", typeof(TextResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule type &apos;None&apos; is not allowed..
        /// </summary>
        internal static string Global_ScheduleType_None {
            get {
                return ResourceManager.GetString("Global_ScheduleType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day in month is smaller than -31 or greater than 31..
        /// </summary>
        internal static string Schedule_AssertDayInMonth {
            get {
                return ResourceManager.GetString("Schedule_AssertDayInMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval must be positive..
        /// </summary>
        internal static string Schedule_AssertDayMonthInterval {
            get {
                return ResourceManager.GetString("Schedule_AssertDayMonthInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object is not initialized..
        /// </summary>
        internal static string Schedule_AssertInitialized {
            get {
                return ResourceManager.GetString("Schedule_AssertInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No active months specified..
        /// </summary>
        internal static string Schedule_AssertMonths_NoMonths {
            get {
                return ResourceManager.GetString("Schedule_AssertMonths_NoMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start time is either negative or greater than 24 hours..
        /// </summary>
        internal static string Schedule_AssertStartTime {
            get {
                return ResourceManager.GetString("Schedule_AssertStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval may not be negative..
        /// </summary>
        internal static string Schedule_AssertTimeSpanInterval {
            get {
                return ResourceManager.GetString("Schedule_AssertTimeSpanInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No week day specified..
        /// </summary>
        internal static string Schedule_AssertWeekDay_NoWeekDay {
            get {
                return ResourceManager.GetString("Schedule_AssertWeekDay_NoWeekDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one week day specified..
        /// </summary>
        internal static string Schedule_AssertWeekDay_TooManyWeekDays {
            get {
                return ResourceManager.GetString("Schedule_AssertWeekDay_TooManyWeekDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute is invalid or empty..
        /// </summary>
        internal static string Schedule_ParseEnumAttribute_InvalidAttribute {
            get {
                return ResourceManager.GetString("Schedule_ParseEnumAttribute_InvalidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute is missing..
        /// </summary>
        internal static string Schedule_ReadXml_MissingAttribute {
            get {
                return ResourceManager.GetString("Schedule_ReadXml_MissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule element has no attributes..
        /// </summary>
        internal static string Schedule_ReadXml_NoAttributes {
            get {
                return ResourceManager.GetString("Schedule_ReadXml_NoAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object is not initialized..
        /// </summary>
        internal static string ScheduledTask_AssertActive_NotInit {
            get {
                return ResourceManager.GetString("ScheduledTask_AssertActive_NotInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; element is missing or empty..
        /// </summary>
        internal static string ScheduledTask_ReadXml_MissingElement {
            get {
                return ResourceManager.GetString("ScheduledTask_ReadXml_MissingElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval may not be negative..
        /// </summary>
        internal static string Scheduler_AssertInterval_Negative {
            get {
                return ResourceManager.GetString("Scheduler_AssertInterval_Negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout has elapsed, but at least one scheduled task is still active..
        /// </summary>
        internal static string Scheduler_Stop_Timeout {
            get {
                return ResourceManager.GetString("Scheduler_Stop_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout may not be negative..
        /// </summary>
        internal static string Scheduler_Stop_TimeoutNegative {
            get {
                return ResourceManager.GetString("Scheduler_Stop_TimeoutNegative", resourceCulture);
            }
        }
    }
}
